def get_csv_data(filename):
    csv_file = open(filename, newline="\n")
    csv_data = csv.reader(csv_file, delimiter=",")
    return list(csv_data)


def date_parser(date_part, date):
    """
    Get the individual part of a date in the format: yyyy-mm-dd

    Arguments:
        date_part -- Which part of the date you want: m for month, y for year or d for day.
        date -- A string in the form yyyy-mm-dd
    
    Returns:
        A string with the requested part of the date.
    """

    date_map = {"m": 1, "d": 2, "y": 0}    
    if (date_part in date_map):
        t = date.split("-")
        return t[date_map[date_part]]
    else:
        print("Invalid date part given. Pass either m, y or d")
        return None


def partition_lengths(partitions):
    """
    Returns a dictionary containing the lengths of each partition in the input.
    
    Arguments:
        partitions: A list of list, or a dictionary of a hash mapped to a list.
    
    Returns:
        a dictionary. If the input is a list, the dictionary key is the index of the partition
        in the input.
        If the input is a dictionary, then the original input dictionary key is used.    
    """

    part_lens = {}

    if type(partitions) is dict:
        for h,l in partitions.items():
            part_lens[h] = len(l)

    elif type(partitions) is list:
        for i, p in enumerate(partitions):
            part_lens[i] = len(p)
    
    else:
        print("Unsupported type")
        return None
        
    return part_lens


    